<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="cb681a6e-93a1-441c-a969-0caab846c5c5" activeEnvironment="Default" name="CleanVersion" resourceRoot="${projectDir}" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" encryptionMode="Not encrypted" updated="2.6.0 2019-01-14T14:47:06Z" xmlns:con="http://eviware.com/soapui/config"><con:description>SoapUIplus version - 3.8.1</con:description><con:settings><con:setting id="ProjectSettings@shadowPassword"/></con:settings><con:testSuite id="2f5d8a07-6b28-4d06-9973-023fc1118020" name="Runner"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="c7f1f636-23aa-4597-815a-952ae1a4dca0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Runner" searchProperties="true"><con:settings/><con:testStep type="properties" name="DataSources" id="7c0ad800-6d4c-4ff2-b367-4d37fedbf56f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>DSInput</con:name><con:value>DS_envConfig</con:value></con:property><con:property><con:name>DSInputType</con:name><con:value>xlsx</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="DSLooper" id="68c92ecc-1b5a-462d-b5c5-a08db25e7a42"><con:settings/><con:config><script>/*
MISTO PRO NACTENI VLASTNI FUNKCE
*/
// GetCorrelationId - VZOR
//evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/GetData/GetCorrelationId.groovy").replaceAll("\\\\","/")))

def debugMode = context.expand('${#Project#debugMode}');
def dsInputType = testRunner.testCase.testSteps['DataSources'].getPropertyValue("dsInputType"); 

if (debugMode == "true"){
	log.info "************************************************"
	log.info "dsInputType = " + dsInputType
	log.info "************************************************"
}

if(dsInputType == "xls"){
	//DSLooper
	evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/Looper/DSLooperXLS.groovy").replaceAll("\\\\","/")))
} else if (dsInputType == "xlsx"){
	//DSLooper
	evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/Looper/DSLooperXLSX.groovy").replaceAll("\\\\","/")))
} else if (dsInputType == "csv"){
	//DSLooper
	evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/Looper/DSLooperXLS.groovy").replaceAll("\\\\","/")))
}
</script></con:config></con:testStep><con:testStep type="properties" name="LooperProps" id="31fb292a-2bdb-474a-bf6d-a7189e2e7f0e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>RowsCount</con:name><con:value>2</con:value></con:property><con:property><con:name>ActualRow</con:name><con:value>1</con:value></con:property><con:property><con:name>NextRow</con:name><con:value>2</con:value></con:property><con:property><con:name>StopLoop</con:name><con:value>StopLoop</con:value></con:property><con:property><con:name>LoopsCount</con:name><con:value>0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="InputProps" id="bf673cf9-ab35-4d54-9bef-e1c5299143ed"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>env2test</con:name><con:value>TEST</con:value></con:property><con:property><con:name>host</con:name><con:value>https://test.clv.cz</con:value></con:property><con:property><con:name>measurement</con:name><con:value>test_measurement_mze</con:value></con:property><con:property><con:name>app</con:name><con:value>test_app</con:value></con:property><con:property><con:name>appComponent</con:name><con:value>test_comp</con:value></con:property><con:property><con:name>browserPath</con:name><con:value>C:\Program Files (x86)\Google\Chrome\Application\chrome.exe</con:value></con:property><con:property><con:name>sendMetrics</con:name><con:value>false</con:value></con:property><con:property><con:name>telegrafUrl</con:name><con:value>https://qatick.clance.local/telegraf</con:value></con:property><con:property><con:name>sendResults</con:name><con:value>false</con:value></con:property><con:property><con:name>xrayUrl</con:name><con:value>https://jira.cleverlance.com/rest/raven/1.0/import/execution</con:value></con:property><con:property><con:name>xrayTestExecKeyMaster</con:name><con:value>n/a</con:value></con:property><con:property><con:name>writeFailReqRspOnly</con:name><con:value>true</con:value></con:property><con:property><con:name>debug_error</con:name><con:value>false</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Runner" id="f90ce74f-5671-4621-b36c-e5b98856c9eb"><con:settings/><con:config><script>//call Runner
evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/Runner/Runner.groovy").replaceAll("\\\\","/")));</script></con:config></con:testStep><con:testStep type="groovy" name="DSLoop" id="dbbbc614-8c7c-4396-b6b9-23774fcbbb1c"><con:settings/><con:config><script>//DSLoop
evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/Looper/DSLoop.groovy").replaceAll("\\\\","/")))</script></con:config></con:testStep><con:testStep type="groovy" name="Evaluation" id="68b90d80-f18a-4332-aeb9-7e4eb664e128" disabled="true"><con:settings/><con:config><script>//Evaluation
evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/Evaluation/Evaluation.groovy").replaceAll("\\\\","/")))
</script></con:config></con:testStep><con:testStep type="groovy" name="EvaluationDB" id="247b9faf-53b5-4c71-93fb-fe46b3ab15d7" disabled="true"><con:settings/><con:config><script>//EvaluationDB
evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/Evaluation/EvaluationDB.groovy").replaceAll("\\\\","/")))
</script></con:config></con:testStep><con:testStep type="httprequest" name="Post2telegraf" id="d5f0d5bf-551e-49e3-b70f-ba6ce698a6da" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d447e27b-82e9-41fe-8637-45b1260eef36" name="Post2telegraf" postQueryString="false" mediaType="application/xml" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#telegrafUrl}</con:endpoint><con:request>${#TestSuite#metric_1}
${#TestSuite#metric_2}
${#TestSuite#metric_3}
${#TestSuite#metric_4}
${#TestSuite#metric_5}
${#TestSuite#metric_6}
${#TestSuite#metric_7}
${#TestSuite#metric_8}
${#TestSuite#metric_9}
${#TestSuite#metric_10}
${#TestSuite#metric_11}
${#TestSuite#metric_12}
${#TestSuite#metric_13}
${#TestSuite#metric_14}
${#TestSuite#metric_15}
${#TestSuite#metric_16}
${#TestSuite#metric_17}
${#TestSuite#metric_18}
${#TestSuite#metric_19}
${#TestSuite#metric_20}
${#TestSuite#metric_21}
${#TestSuite#metric_22}
${#TestSuite#metric_23}
${#TestSuite#metric_24}
${#TestSuite#metric_25}
${#TestSuite#metric_26}
${#TestSuite#metric_27}
${#TestSuite#metric_28}
${#TestSuite#metric_29}
${#TestSuite#metric_30}
${#TestSuite#metric_31}
${#TestSuite#metric_32}
${#TestSuite#metric_33}
${#TestSuite#metric_34}
${#TestSuite#metric_35}
${#TestSuite#metric_36}
${#TestSuite#metric_37}
${#TestSuite#metric_38}
${#TestSuite#metric_39}
${#TestSuite#metric_40}
${#TestSuite#metric_41}
${#TestSuite#metric_42}
${#TestSuite#metric_43}
${#TestSuite#metric_44}
${#TestSuite#metric_45}
${#TestSuite#metric_46}
${#TestSuite#metric_47}
${#TestSuite#metric_48}
${#TestSuite#metric_49}
${#TestSuite#metric_50}
${#TestSuite#metric_51}
${#TestSuite#metric_52}
${#TestSuite#metric_53}
${#TestSuite#metric_54}
${#TestSuite#metric_55}
${#TestSuite#metric_56}
${#TestSuite#metric_57}
${#TestSuite#metric_58}
${#TestSuite#metric_59}
${#TestSuite#metric_60}
${#TestSuite#metric_61}
${#TestSuite#metric_62}
${#TestSuite#metric_63}
${#TestSuite#metric_64}
${#TestSuite#metric_65}
${#TestSuite#metric_66}
${#TestSuite#metric_67}
${#TestSuite#metric_68}
${#TestSuite#metric_69}
${#TestSuite#metric_70}
${#TestSuite#metric_71}
${#TestSuite#metric_72}
${#TestSuite#metric_73}
${#TestSuite#metric_74}
${#TestSuite#metric_75}
${#TestSuite#metric_76}
${#TestSuite#metric_77}
${#TestSuite#metric_78}
${#TestSuite#metric_79}
${#TestSuite#metric_80}
${#TestSuite#metric_81}
${#TestSuite#metric_82}
${#TestSuite#metric_83}
${#TestSuite#metric_84}
${#TestSuite#metric_85}
${#TestSuite#metric_86}
${#TestSuite#metric_87}
${#TestSuite#metric_88}
${#TestSuite#metric_89}
${#TestSuite#metric_90}
${#TestSuite#metric_91}
${#TestSuite#metric_92}
${#TestSuite#metric_93}
${#TestSuite#metric_94}
${#TestSuite#metric_95}
${#TestSuite#metric_96}
${#TestSuite#metric_97}
${#TestSuite#metric_98}
${#TestSuite#metric_99}
${#TestSuite#metric_100}</con:request><con:assertion type="Valid HTTP Status Codes" id="5693e020-c2fe-471b-af84-9bf9c6b33585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Post2xray" id="9b9078e2-c879-4e90-a716-a332975f75e6" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d447e27b-82e9-41fe-8637-45b1260eef36" name="Post2xray" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#xrayUrl}</con:endpoint><con:request>{
    "testExecutionKey": "${InputProps#xrayTestExecKey}",
    "info" : {
        "summary" : "api-import",
        "description" : "api-import",
        "testEnvironments": ["${#Project#env2test}"]
    },
    "tests" : [
        {
            "testKey" : "${InputProps#xrayTestKey}",
            "status" : "${#TestCase#testCaseResult}"
        }
     ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="5693e020-c2fe-471b-af84-9bf9c6b33585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:username/><con:password/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:setupScript>//cleanUp InputProps
evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/CleanUp/CleanUpInputProps.groovy").replaceAll("\\\\","/")));</con:setupScript><con:properties><con:property><con:name>DSPath</con:name><con:value>D:/01_WORK/01_Actual_work/01_CLV/01_Projects/01_CAT/01_Github/soapuiplus-3.0/01_DataSources/DS_envConfig.xlsx</con:value></con:property><con:property><con:name>nextRow</con:name><con:value>1</con:value></con:property><con:property><con:name>randStr</con:name><con:value>b4HKuQMJyH</con:value></con:property><con:property><con:name>rspStatusCode</con:name><con:value>TimedOut</con:value></con:property><con:property><con:name>debugRowNumber</con:name><con:value>1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:setupScript/><con:reportParameters/></con:testSuite><con:testSuite id="f1b183a1-dc79-4206-a7e8-305bffa474dd" name="Execution" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="abd3a132-6536-467f-8a52-2eaf9de2a341" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="properties" name="DataSources" id="dd550280-e63b-41e6-83a0-56aba2488574"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>DSInput</con:name><con:value>DS_cleanVersion</con:value></con:property><con:property><con:name>DSOutput</con:name><con:value>Results_cleanVersion</con:value></con:property><con:property><con:name>DSInputType</con:name><con:value>xlsx</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="DSLooper" id="c602dc98-9e1f-480e-81e6-fc67dba266df"><con:settings/><con:config><script>/*
MISTO PRO NACTENI VLASTNI FUNKCE
*/
// GetCorrelationId - VZOR
evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/GetData/GetCorrelationId.groovy").replaceAll("\\\\","/")))
//log.info "************************************************"

//DSLooper
def debugMode = context.expand('${#Project#debugMode}');
def dsInputType = testRunner.testCase.testSteps['DataSources'].getPropertyValue("dsInputType"); 

if (debugMode == "true"){
	log.info "************************************************"
	log.info "dsInputType = " + dsInputType
	log.info "************************************************"
}
 
if(dsInputType == "xls"){
	//DSLooper
	evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/Looper/DSLooperXLS.groovy").replaceAll("\\\\","/")))
} else if (dsInputType == "xlsx"){
	//DSLooper
	evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/Looper/DSLooperXLSX.groovy").replaceAll("\\\\","/")))
} else if (dsInputType == "csv"){
	//DSLooper
	evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/Looper/DSLooperXLS.groovy").replaceAll("\\\\","/")))
}
</script></con:config></con:testStep><con:testStep type="properties" name="LooperProps" id="cb51f3ec-e6c3-4db0-9553-e2e5ac6793be"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>RowsCount</con:name><con:value>2</con:value></con:property><con:property><con:name>ActualRow</con:name><con:value>1</con:value></con:property><con:property><con:name>NextRow</con:name><con:value>2</con:value></con:property><con:property><con:name>StopLoop</con:name><con:value>StopLoop</con:value></con:property><con:property><con:name>LoopsCount</con:name><con:value>0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="InputProps" id="0431ee70-3da7-4ed9-825b-64775714b35f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>tcId</con:name><con:value>1</con:value></con:property><con:property><con:name>tcName</con:name><con:value>testCase1</con:value></con:property><con:property><con:name>tcDesc</con:name><con:value>testCase1</con:value></con:property><con:property><con:name>testVariantId</con:name><con:value>TC01TV01</con:value></con:property><con:property><con:name>testVariantDesc</con:name><con:value>varianta_1</con:value></con:property><con:property><con:name>xrayTestExecKey</con:name><con:value>n/a</con:value></con:property><con:property><con:name>xrayTestKey</con:name><con:value>n/a</con:value></con:property><con:property><con:name>dsVal1</con:name><con:value/></con:property><con:property><con:name>dsVal2</con:name><con:value/></con:property><con:property><con:name>dsVal3</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="OutputProps" id="334ab4ec-5baf-4530-a7bb-375953a53199"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>tcName</con:name><con:value>testCase1</con:value></con:property><con:property><con:name>testVariantId</con:name><con:value>TC01TV01</con:value></con:property><con:property><con:name>testVariantDesc</con:name><con:value>varianta_1</con:value></con:property><con:property><con:name>rspStatusCode</con:name><con:value>200</con:value></con:property><con:property><con:name>rspAssertsStatus</con:name><con:value>1</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="WriteOutputs" id="47982b2b-d77a-4282-b133-8bc1ae7d3f88"><con:settings/><con:config><script>log.info "*******************************WRITTEN VALUES******************************"

def tcName = context.expand('${InputProps#tcName}');
log.info "tcName = " + tcName;
testRunner.testCase.getTestStepByName("OutputProps").setPropertyValue("tcName", tcName);

def testVariantId = context.expand('${InputProps#testVariantId}');
log.info "testVariantId = " + testVariantId;
testRunner.testCase.getTestStepByName("OutputProps").setPropertyValue("testVariantId", testVariantId);

def testVariantDesc = context.expand('${InputProps#testVariantDesc}');
log.info "testVariantDesc = " + testVariantDesc;
testRunner.testCase.getTestStepByName("OutputProps").setPropertyValue("testVariantDesc", testVariantDesc);

def rspStatusCode = context.expand('${#TestCase#rspStatusCode}');
log.info "rspStatusCode = " + rspStatusCode;
testRunner.testCase.getTestStepByName("OutputProps").setPropertyValue("rspStatusCode", rspStatusCode);

def rspAssertsStatus = context.expand('${#TestCase#rspAssertsStatus}');
log.info "rspAssertsStatus = " + rspAssertsStatus;
testRunner.testCase.getTestStepByName("OutputProps").setPropertyValue("rspAssertsStatus", rspAssertsStatus);

evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/WriteOutputs/WriteOutputs.groovy").replaceAll("\\\\","/")))

log.info "**********************************NEXT CALL**********************************";</script></con:config></con:testStep><con:testStep type="groovy" name="DSLoop" id="4dc58d22-f9a8-4f83-9ac3-f8286b6a2a53"><con:settings/><con:config><script>//DSLoop
evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/Looper/DSLoop.groovy").replaceAll("\\\\","/")))
</script></con:config></con:testStep><con:setupScript>//cleanUp InputProps
evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/CleanUp/CleanUpInputProps.groovy").replaceAll("\\\\","/")));

//cleanUp OutputProps
evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/CleanUp/CleanUpOutputProps.groovy").replaceAll("\\\\","/")));

//cleanUp TestSuite Props
evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/CleanUp/CleanUpTestSuiteProps.groovy").replaceAll("\\\\","/")));

//clear content of file for metrics
evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/CleanUp/CleanUpMetricsFile.groovy").replaceAll("\\\\","/")));

//create results file
evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/WriteOutputs/CreateOutputFile.groovy").replaceAll("\\\\","/")));
</con:setupScript><con:tearDownScript>//Send metrics to grafana
def sendMetrics = context.expand('${#Project#sendMetrics}');

if (sendMetrics.equals("true")) {
	
	evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/PostMetrics/GetMetrics.groovy").replaceAll("\\\\","/")));
	
	// Post2telegraf
	evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/PostMetrics/Post2telegraf.groovy").replaceAll("\\\\","/")));
}
else {
	
	log.info "Results were not sent to Grafana (InfluxDB)";  
}

//Send results to xray?
def sendResults = context.expand('${#Project#sendResults}');
 
if (sendResults.equals("true")) {
     
	evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/PostResults/GetResults.groovy").replaceAll("\\\\","/")));
	
	// Post2telegraf
	evaluate(new File(context.expand(context.expand('${projectDir}') + "/06_Groovy/Utils/PostResults/Post2xray.groovy").replaceAll("\\\\","/")));
}
else {
 
    log.info "Results were not sent to Xray (Jira)";  
}
</con:tearDownScript><con:properties><con:property><con:name>nextRow</con:name><con:value>1</con:value></con:property><con:property><con:name>DSPath</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">D:/01_WORK/01_Actual_work/01_CLV/01_Projects/01_CAT/01_Github/soapuiplus-3.0/01_DataSources/DS_cleanVersion_TEST.xlsx</con:value></con:property><con:property><con:name>rspAssertsStatus</con:name><con:value>1</con:value></con:property><con:property><con:name>randStr</con:name><con:value>2UKTSvmFMV</con:value></con:property><con:property><con:name>reqCorrelationId</con:name><con:value>c031523368886521207825801</con:value></con:property><con:property><con:name>rspStatusCode</con:name><con:value>200</con:value></con:property><con:property><con:name>rawRequest</con:name><con:value/></con:property><con:property><con:name>rawResponse</con:name><con:value/></con:property><con:property><con:name>reqRaw</con:name><con:value/></con:property><con:property><con:name>rspRaw</con:name><con:value/></con:property><con:property><con:name>testCaseResult</con:name><con:value/></con:property><con:property><con:name>debugRowNumber</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">6</con:value></con:property><con:property><con:name>testCaseStatus</con:name><con:value>1</con:value></con:property><con:property><con:name>dbCon</con:name><con:value/></con:property><con:property><con:name>kafkaMessageSendCheck</con:name><con:value>1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:setupScript>def env2test  = context.expand ('${#Project#env2test}');

log.info "****************************************RUN ON ENVIRONMENT " + env2test + "****************************************";
log.info "******************************************************************************************************************";</con:setupScript><con:tearDownScript/><con:reportParameters/></con:testSuite><con:savedRecentRuns>1</con:savedRecentRuns><con:properties><con:property><con:name>testRunId</con:name><con:value>2021-10-03 13:56:535</con:value></con:property><con:property><con:name>env2test</con:name><con:value>TEST</con:value></con:property><con:property><con:name>host</con:name><con:value>https://test.clv.cz</con:value></con:property><con:property><con:name>measurement</con:name><con:value>test_measurement_mze</con:value></con:property><con:property><con:name>app</con:name><con:value>test_app</con:value></con:property><con:property><con:name>appComponent</con:name><con:value>test_comp</con:value></con:property><con:property><con:name>browserPath</con:name><con:value>C:\Program Files (x86)\Google\Chrome\Application\chrome.exe</con:value></con:property><con:property><con:name>sendMetrics</con:name><con:value>false</con:value></con:property><con:property><con:name>telegrafUrl</con:name><con:value>https://qatick.clance.local/telegraf</con:value></con:property><con:property><con:name>sendResults</con:name><con:value>false</con:value></con:property><con:property><con:name>xrayUrl</con:name><con:value>https://jira.cleverlance.com/rest/raven/1.0/import/execution</con:value></con:property><con:property><con:name>xrayTestExecKeyMaster</con:name><con:value>n/a</con:value></con:property><con:property><con:name>writeFailReqRspOnly</con:name><con:value>true</con:value></con:property><con:property><con:name>debug_error</con:name><con:value>false</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/><con:authRepository/><con:tags/></con:soapui-project>